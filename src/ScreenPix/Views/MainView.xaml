<Window x:Class="SwissTool.Ext.ScreenPix.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:DrawToolsLib="clr-namespace:DrawToolsLib;assembly=DrawToolsLib"
        xmlns:managers="clr-namespace:SwissTool.Framework.UI.Managers;assembly=SwissTool.Framework.UI"
        Height="{Binding Path=Screenshot.WorkingArea.Height}" 
        MinHeight="{Binding Path=Screenshot.WorkingArea.Height}"
        MaxHeight="{Binding Path=Screenshot.WorkingArea.Height}"
        Width="{Binding Path=Screenshot.WorkingArea.Width}" 
        MinWidth="{Binding Path=Screenshot.WorkingArea.Width}"
        MaxWidth="{Binding Path=Screenshot.WorkingArea.Width}"
        Left="0" 
        Top="0" 
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        Topmost="True" 
        WindowStyle="None" 
        FocusManager.FocusedElement="{Binding ElementName=MainCanvas}" 
        Background="White" 
        UseLayoutRounding="False">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <EventSetter Event="KeyDown" Handler="WindowKeyDown" />
            <EventSetter Event="Loaded" Handler="WindowLoaded" />
        </Style>
    </Window.Style>
    <Window.Resources>
        <DrawToolsLib:ToolTypeConverter x:Key="convToolType"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />

        <Storyboard x:Key="ViewBoxMouseEnter">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.8" Duration="0:0:0.2" Storyboard.TargetName="MainToolBar" />
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0 25 0 0" To="0 0 0 0" Duration="0:0:0.2" Storyboard.TargetName="SubToolBar" />
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2" Storyboard.TargetName="SubToolBar" />
        </Storyboard>

        <Storyboard x:Key="ViewBoxMouseLeave">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.8" To="1" Duration="0:0:0.2" Storyboard.TargetName="MainToolBar" />
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0 0 0 0" To="0 25 0 0" Duration="0:0:0.2" Storyboard.TargetName="SubToolBar" />
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" Storyboard.TargetName="SubToolBar" />
        </Storyboard>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Margin" Value="3" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="22" />
        </Style>

        <Style TargetType="{x:Type ToolBar}" x:Key="ToolBarStyle">
            <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
            <Setter Property="Opacity" Value="0.8" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Gray" Opacity="0.8" />
                </Setter.Value>
            </Setter>

            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="9" Opacity=".1" Softness="10" />
                </Setter.Value>
            </Setter>
           
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="Gray" Opacity="1" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BitmapEffect">
                        <Setter.Value>
                            <DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="9" Opacity=".15" Softness="10" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToolBar}" BasedOn="{StaticResource ToolBarStyle}" x:Key="SubToolBarStyle">
            <Setter Property="BorderThickness" Value="1 0 1 1" />
        </Style>

        <BitmapImage x:Key="IconNew" UriSource="../Resources/Icons/Light/24x24/new_document.png" />
        <BitmapImage x:Key="IconNewDisabled" UriSource="../Resources/Icons/Light/24x24/new_document_disabled.png" />
        <BitmapImage x:Key="IconSave" UriSource="../Resources/Icons/Light/24x24/save.png" />
        <BitmapImage x:Key="IconPrint" UriSource="../Resources/Icons/Light/24x24/print.png" />
        <BitmapImage x:Key="IconCopy" UriSource="../Resources/Icons/Light/24x24/copy.png" />
        <BitmapImage x:Key="IconCopyDisabled" UriSource="../Resources/Icons/Light/24x24/copy_disabled.png" />
        <BitmapImage x:Key="IconUndo" UriSource="../Resources/Icons/Light/24x24/undo.png" />
        <BitmapImage x:Key="IconUndoDisabled" UriSource="../Resources/Icons/Light/24x24/undo_disabled.png" />
        <BitmapImage x:Key="IconRedo" UriSource="../Resources/Icons/Light/24x24/redo.png" />
        <BitmapImage x:Key="IconRedoDisabled" UriSource="../Resources/Icons/Light/24x24/redo_disabled.png" />
        <BitmapImage x:Key="IconPointer" UriSource="../Resources/Icons/Light/24x24/cursor.png" />
        <BitmapImage x:Key="IconRectangularMarquee" UriSource="../Resources/Icons/Light/24x24/rectangular_marquee.png" />
        <BitmapImage x:Key="IconRectangle" UriSource="../Resources/Icons/Light/24x24/rectangle.png" />
        <BitmapImage x:Key="IconEllipse" UriSource="../Resources/Icons/Light/24x24/ellipse.png" />
        <BitmapImage x:Key="IconLine" UriSource="../Resources/Icons/Light/24x24/line.png" />
        <BitmapImage x:Key="IconPen" UriSource="../Resources/Icons/Light/24x24/pencil_tip.png" />
        <BitmapImage x:Key="IconText" UriSource="../Resources/Icons/Light/24x24/generic_text.png" />
        <BitmapImage x:Key="IconSettings" UriSource="../Resources/Icons/Light/24x24/services.png" />
        <BitmapImage x:Key="IconAbout" UriSource="../Resources/Icons/Light/24x24/help.png" />
        <BitmapImage x:Key="IconExit" UriSource="../Resources/Icons/Light/24x24/exit.png" />

        <BitmapImage x:Key="IconNewDark" UriSource="../Resources/Icons/Dark/24x24/new_document.png" />
        <BitmapImage x:Key="IconSaveDark" UriSource="../Resources/Icons/Dark/24x24/save.png" />
        <BitmapImage x:Key="IconPrintDark" UriSource="../Resources/Icons/Dark/24x24/print.png" />
        <BitmapImage x:Key="IconCopyDark" UriSource="../Resources/Icons/Dark/24x24/copy.png" />
        <BitmapImage x:Key="IconUndoDark" UriSource="../Resources/Icons/Dark/24x24/undo.png" />
        <BitmapImage x:Key="IconRedoDark" UriSource="../Resources/Icons/Dark/24x24/redo.png" />
        <BitmapImage x:Key="IconPointerDark" UriSource="../Resources/Icons/Dark/24x24/cursor.png" />
        <BitmapImage x:Key="IconRectangularMarqueeDark" UriSource="../Resources/Icons/Dark/24x24/rectangular_marquee.png" />
        <BitmapImage x:Key="IconRectangleDark" UriSource="../Resources/Icons/Dark/24x24/rectangle.png" />
        <BitmapImage x:Key="IconEllipseDark" UriSource="../Resources/Icons/Dark/24x24/ellipse.png" />
        <BitmapImage x:Key="IconLineDark" UriSource="../Resources/Icons/Dark/24x24/line.png" />
        <BitmapImage x:Key="IconPenDark" UriSource="../Resources/Icons/Dark/24x24/pencil_tip.png" />
        <BitmapImage x:Key="IconTextDark" UriSource="../Resources/Icons/Dark/24x24/generic_text.png" />
        <BitmapImage x:Key="IconSettingsDark" UriSource="../Resources/Icons/Dark/24x24/services.png" />
        <BitmapImage x:Key="IconAboutDark" UriSource="../Resources/Icons/Dark/24x24/help.png" />
        <BitmapImage x:Key="IconExitDark" UriSource="../Resources/Icons/Dark/24x24/exit.png" />

    </Window.Resources>

    <Window.Triggers>

       <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                    Storyboard.TargetProperty="Opacity"
                    Storyboard.TargetName="PreviewText"
                    From="1.0" To="0.0" Duration="0:0:0.5" BeginTime="0:0:1.5" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PreviewText" BeginTime="0:0:1.5">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                            <DiscreteObjectKeyFrame.Value>
                                <Visibility>Collapsed</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Canvas Name="MainCanvas" MouseMove="MainCanvas_MouseMove" PreviewMouseLeftButtonUp="MainCanvas_PreviewMouseLeftButtonUp"  Opacity="1">
       
        <Viewbox Name="viewBoxContainer" Panel.ZIndex="1" UseLayoutRounding="True">

            <Viewbox.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource ViewBoxMouseEnter}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource ViewBoxMouseLeave}" />
                </EventTrigger>
            </Viewbox.Triggers>
            
            <Grid Name="gridContainer">
                <Image Name="imageBackground" Source="{Binding Path=FullscreenImage}" Stretch="Fill"/>

                <DrawToolsLib:DrawingCanvas Name="drawingCanvas" Background="#00000000"
                    Width="{Binding ElementName=imageBackground, Path=ActualWidth, Mode=OneWay}"
                    Height="{Binding ElementName=imageBackground, Path=ActualHeight, Mode=OneWay}" />
            </Grid>

        </Viewbox>

        <ToolBar Style="{StaticResource ToolBarStyle}" Panel.ZIndex="3" Name="MainToolBar" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Canvas.Left="{Binding Path=ToolBarLocationX, Mode=TwoWay}" Canvas.Top="{Binding Path=ToolBarLocationY, Mode=TwoWay}" Focusable="False">
            <TextBlock Name="ToolbarMoveHandle" VerticalAlignment="Center" Margin="5,0,3,0" Cursor="SizeAll" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" MouseLeftButtonUp="TextBlock_MouseLeftButtonUp">
                    ScreenPix
            </TextBlock>
            <Separator />

            <Button Width="24" Height="24" Click="NewButtonClick" ToolTip="New workspace" IsEnabled="{Binding ElementName=drawingCanvas, Path=IsDirty, Mode=OneWay}" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconNew}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconNewDark}" />
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" Value="{StaticResource IconNewDisabled}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            
            <Button Width="24" Height="24" Click="SaveButtonClick" ToolTip="Save workspace" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconSave}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconSaveDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <Button Width="24" Height="24" Click="PrintButtonClick" ToolTip="Print workspace">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconPrint}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconPrintDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            
            <Separator />
            <Button Width="24" Height="24" Click="CopyToClipboardButtonClick" ToolTip="Copy workspace to clipboard" IsEnabled="{Binding ElementName=drawingCanvas, Path=CanCopyToClipboard, Mode=OneWay}" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconCopy}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconCopyDark}" />
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" Value="{StaticResource IconCopyDisabled}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <Button Width="24" Height="24" Click="UndoButtonClick" ToolTip="Undo" IsEnabled="{Binding ElementName=drawingCanvas, Path=CanUndo, Mode=OneWay}" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconUndo}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconUndoDark}" />
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" Value="{StaticResource IconUndoDisabled}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>    
                    </Image.Style>
                </Image>
            </Button>

            <Button Width="24" Height="24" Click="RedoButtonClick" ToolTip="Redo" IsEnabled="{Binding ElementName=drawingCanvas, Path=CanRedo, Mode=OneWay}" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconRedo}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconRedoDark}" />
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" Value="{StaticResource IconRedoDisabled}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <Separator />
            <ToggleButton Name="buttonToolPointer"  ToolTip="Pointer" Tag="Pointer" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=Pointer}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconPointer}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconPointerDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <ToggleButton Name="buttonToolRectangularMarquee"  ToolTip="Rectangular Marquee" Tag="RectangularMarquee" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=RectangularMarquee}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconRectangularMarquee}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconRectangularMarqueeDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>
                
            <ToggleButton Name="buttonToolRectangle" ToolTip="Rectangle" Tag="Rectangle" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=Rectangle}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconRectangle}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconRectangleDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <ToggleButton Name="buttonToolEllipse" ToolTip="Ellipse" Tag="Ellipse" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=Ellipse}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconEllipse}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconEllipseDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <ToggleButton Name="buttonToolLine" ToolTip="Line" Tag="Line" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=Line}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconLine}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconLineDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <ToggleButton Name="buttonToolPencil" ToolTip="Pencil" Tag="PolyLine" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=PolyLine}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconPen}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconPenDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <ToggleButton Name="buttonToolText" ToolTip="Text" Tag="Text" IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,Converter={StaticResource convToolType}, ConverterParameter=Text}" PreviewMouseDown="ButtonToolPreviewMouseDown" Height="24" Width="24">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconText}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconTextDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <Separator />

            <Button Width="24" Height="24" Command="{Binding Path=ShowSettingsWindowCommand}" ToolTip="Settings" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconSettings}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconSettingsDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <Button Width="24" Height="24" Command="{Binding Path=ShowAboutWindowCommand}" ToolTip="About" Focusable="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconAbout}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconAboutDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <Separator />
            
            <Button Width="24" Height="24" Click="ExitButtonClick" ToolTip="Close window">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource IconExit}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="{StaticResource IconExitDark}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </ToolBar>

        <ToolBar Style="{StaticResource SubToolBarStyle}" 
                 Panel.ZIndex="2" 
                 Name="SubToolBar" 
                 ToolBarTray.IsLocked="True" 
                 Loaded="ToolBar_Loaded" 
                 Canvas.Left="{Binding Path=SubToolBarLocationX, Mode=OneWay}" 
                 Canvas.Top="{Binding Path=ToolBarLocationY, Mode=OneWay}" 
                 Focusable="False" 
                 Height="28" 
                 Padding="0 4 0 0" 
                 Visibility="{Binding Path=ShowToolPropertyPanel, Converter={StaticResource boolToVisibilityConverter}}" 
                 Opacity="0">
            <Button Name="buttonPropertiesFont" ToolTip="Font" PreviewMouseDown="ButtonPropertiesFontPreviewMouseDown" Visibility="{Binding Path=DisplayFontSettings, Converter={StaticResource boolToVisibilityConverter}}" Width="106" Height="18" Margin="2 0 0 0">
                <!-- Font Family Name (size) -->
                <DockPanel>

                    <Image Margin="0 0 3 0">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{StaticResource IconText}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                        <Setter Property="Source" Value="{StaticResource IconTextDark}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <StackPanel Orientation="Horizontal" Margin="0,-1,0,0">
                        <TextBlock Text="{Binding ElementName=drawingCanvas, Path=TextFontFamilyName, Mode=OneWay}" Width="60" FontSize="10" />
                        <TextBlock Text=" (" />
                        <TextBlock Text="{Binding ElementName=drawingCanvas, Path=TextFontSize, Mode=OneWay}" FontSize="10" />
                        <TextBlock Text=")" />
                    </StackPanel>
                </DockPanel>
            </Button>

            <ComboBox Name="comboPropertiesLineWidth" ToolTip="Line width" Height="18" Width="47" IsEditable="False" Margin="5,0,0,0" SelectionChanged="ComboPropertiesLineWidthSelectionChanged" Focusable="False" Visibility="{Binding Path=DisplayDrawSettings, Converter={StaticResource boolToVisibilityConverter}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="12" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>

            <Separator Margin="3 0 0 0" Visibility="{Binding Path=DisplayDrawSettings, Converter={StaticResource boolToVisibilityConverter}}" />

            <ComboBox Name="comboPropertiesLineStyle" ToolTip="Line style" Height="18" Width="47" IsEditable="False" Margin="5,0,0,0" SelectionChanged="ComboPropertiesLineStyleSelectionChanged" Focusable="False" Visibility="{Binding Path=DisplayDrawSettings, Converter={StaticResource boolToVisibilityConverter}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="12" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>

            <Separator Margin="3 0 0 0" />
            
            <ComboBox Name="comboPropertiesLineColor" ToolTip="Line color" Height="18" Width="47" IsEditable="False" Margin="5,0,5,0" SelectionChanged="ComboPropertiesLineColorSelectionChanged" Focusable="False" Visibility="{Binding Path=DisplayColorSettings, Converter={StaticResource boolToVisibilityConverter}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="12" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </ToolBar>

        <Border Name="PreviewText" Panel.ZIndex="3" 
                Background="{DynamicResource WhiteBrush}" 
                Canvas.Left="{Binding Path=PreviewPanelLocationX}" 
                Canvas.Top="{Binding Path=PreviewPanelLocationY}" 
                Width="230" Height="50" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="0" BorderThickness="1" BorderBrush="Gray">
  
            <Border.BitmapEffect>
                <DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="5" Opacity=".2" Softness=".5" />
            </Border.BitmapEffect>
            <StackPanel Orientation="Horizontal">
                <Image Margin="10 0 5 0">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="..\Resources\Icons\Light\48x48\virtual_machine2.png" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static managers:WindowManager.CurrentTheme}, Path=UiHint}" Value="Dark">
                                    <Setter Property="Source" Value="..\Resources\Icons\Dark\48x48\virtual_machine2.png" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Label Foreground="{DynamicResource BlackBrush}" FontFamily="{DynamicResource ContentFontFamily}" FontSize="{DynamicResource NormalFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center">SCREENSHOT PREVIEW</Label>
            </StackPanel>
        </Border>
        
    </Canvas>
</Window>
